{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\use_popcorn\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextExpander, {\n      children: \"Space travel is the ultimate adventure! Imagine soaring past the stars and exploring new worlds. It's the stuff of dreams and science fiction, but believe it or not, space travel is a real thing. Humans and robots are constantly venturing out into the cosmos to uncover its secrets and push the boundaries of what's possible.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextExpander, {\n      collapsedNumWords: 20,\n      expandButtonText: \"Show text\",\n      collapseButtonText: \"Collapse text\",\n      buttonColor: \"#ff6622\",\n      children: \"Space travel requires some seriously amazing technology and collaboration between countries, private companies, and international space organizations. And while it's not always easy (or cheap), the results are out of this world. Think about the first time humans stepped foot on the moon or when rovers were sent to roam around on Mars.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextExpander, {\n      expanded: true,\n      className: \"box\",\n      children: \"Space missions have given us incredible insights into our universe and have inspired future generations to keep reaching for the stars. Space travel is a pretty cool thing to think about. Who knows what we'll discover next!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nfunction TextExpander({\n  collapsedNumWords = 12,\n  expandButtonText = \"Show more\",\n  collapseButtonText = \"Show less\",\n  buttonColor = \"#1f09cc\",\n  expanded = false,\n  className,\n  children\n}) {\n  _s();\n  //krijimi i variablit state\n  const [isTextExpended, setIsTextExpended] = useState(expanded);\n  //nese isTextExpended eshte true komponentet do shfaqen sic jane , ne te kundert do te ndahen dhe do te shfaqen aq fjale sa tregon collapsedNumWords\n  const displayText = isTextExpended ? children : children.split(\" \").slice(0, collapsedNumWords).join(\" \") + \"...\";\n  //krijimi i nje objekti per stilizimin e butonit\n  const ButtonStyle = {\n    background: \"none\",\n    border: \"none\",\n    font: \"inherit\",\n    cursor: \"pointer\",\n    marginLeft: \"7px\",\n    color: buttonColor\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: displayText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsTextExpended(expended => !expended),\n      style: ButtonStyle,\n      children: isTextExpended ? collapseButtonText : expandButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n/*\nimport { useState } from \"react\";\n\nconst tempMovieData = [\n  {\n    imdbID: \"tt1375666\",\n    Title: \"Inception\",\n    Year: \"2010\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_SX300.jpg\",\n  },\n  {\n    imdbID: \"tt0133093\",\n    Title: \"The Matrix\",\n    Year: \"1999\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BNzQzOTk3OTAtNDQ0Zi00ZTVkLWI0MTEtMDllZjNkYzNjNTc4L2ltYWdlXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg\",\n  },\n  {\n    imdbID: \"tt6751668\",\n    Title: \"Parasite\",\n    Year: \"2019\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BYWZjMjk3ZTItODQ2ZC00NTY5LWE0ZDYtZTI3MjcwN2Q5NTVkXkEyXkFqcGdeQXVyODk4OTc3MTY@._V1_SX300.jpg\",\n  },\n];\n\nconst tempWatchedData = [\n  {\n    imdbID: \"tt1375666\",\n    Title: \"Inception\",\n    Year: \"2010\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_SX300.jpg\",\n    runtime: 148,\n    imdbRating: 8.8,\n    userRating: 10,\n  },\n  {\n    imdbID: \"tt0088763\",\n    Title: \"Back to the Future\",\n    Year: \"1985\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BZmU0M2Y1OGUtZjIxNi00ZjBkLTg1MjgtOWIyNThiZWIwYjRiXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg\",\n    runtime: 116,\n    imdbRating: 8.5,\n    userRating: 9,\n  },\n];\n\nconst average = (arr) =>\n  arr.reduce((acc, cur, i, arr) => acc + cur / arr.length, 0);\n\n// accumulator (or acc): This keeps track of the running total or aggregation.\n// currentValue (or cur): This represents the current element being processed in the array.\n// currentIndex (or i): This represents the index of the current element being processed.\n// array: This is the array reduce was called upon.\n\nexport default function App() {\n  const [movies, setMovies] = useState(tempMovieData);\n  const [watched, setWatched] = useState(tempWatchedData);\n\n  return (\n    <>\n      <NavBar>\n        <Logo />\n        <Search />\n        <Numresult movies={movies} />\n      </NavBar>\n      <Main>\n        <Box>\n          <MovieList movies={movies} />\n        </Box>\n        <Box>\n          <WatchedSummary watched={watched} />\n          <WatchedMovieList watched={watched} />\n        </Box>\n      </Main>\n    </>\n  );\n}\nfunction NavBar({ children }) {\n  //props children\n  return <nav className=\"nav-bar\">{children}</nav>;\n}\nfunction Logo() {\n  return (\n    <div className=\"logo\">\n      <span role=\"img\">üçø</span>\n      <h1>usePopcorn</h1>\n    </div>\n  );\n}\nfunction Search() {\n  const [query, setQuery] = useState(\"\");\n  return (\n    <input\n      className=\"search\"\n      type=\"text\"\n      placeholder=\"Search movies...\"\n      value={query}\n      onChange={(e) => setQuery(e.target.value)}\n    />\n  );\n}\nfunction Numresult({ movies }) {\n  return (\n    <p className=\"num-results\">\n      Found <strong>{movies.length}</strong> results\n    </p>\n  );\n}\nfunction Main({ children }) {\n  return <main className=\"main\">{children}</main>;\n}\nfunction Box({ children }) {\n  const [isOpen, setIsOpen] = useState(true);\n  return (\n    <div className=\"box\">\n      <button className=\"btn-toggle\" onClick={() => setIsOpen((open) => !open)}>\n        {isOpen ? \"‚Äì\" : \"+\"}\n      </button>\n      {isOpen && children}\n    </div>\n  );\n}\n\nfunction MovieList({ movies }) {\n  return (\n    <ul className=\"list\">\n      {movies?.map((movie) => (\n        <Movie movie={movie} key={movie.imdbID} />\n      ))}\n    </ul>\n  );\n}\nfunction Movie({ movie }) {\n  return (\n    <li>\n      <img src={movie.Poster} alt={`${movie.Title} poster`} />\n      <h3>{movie.Title}</h3>\n      <div>\n        <p>\n          <span>üóì</span>\n          <span>{movie.Year}</span>\n        </p>\n      </div>\n    </li>\n  );\n}\n\nfunction WatchedSummary({ watched }) {\n  const avgImdbRating = average(watched.map((movie) => movie.imdbRating));\n  const avgUserRating = average(watched.map((movie) => movie.userRating));\n  const avgRuntime = average(watched.map((movie) => movie.runtime));\n  return (\n    <div className=\"summary\">\n      <h2>Movies you watched</h2>\n      <div>\n        <p>\n          <span>#Ô∏è‚É£</span>\n          <span>{watched.length} movies</span>\n        </p>\n        <p>\n          <span>‚≠êÔ∏è</span>\n          <span>{avgImdbRating}</span>\n        </p>\n        <p>\n          <span>üåü</span>\n          <span>{avgUserRating}</span>\n        </p>\n        <p>\n          <span>‚è≥</span>\n          <span>{avgRuntime} min</span>\n        </p>\n      </div>\n    </div>\n  );\n}\nfunction WatchedMovieList({ watched }) {\n  return (\n    <ul className=\"list\">\n      {watched.map((movie) => (\n        <WatchedMovie movie={movie} />\n      ))}\n    </ul>\n  );\n}\nfunction WatchedMovie({ movie }) {\n  return (\n    <li key={movie.imdbID}>\n      <img src={movie.Poster} alt={`${movie.Title} poster`} />\n      <h3>{movie.Title}</h3>\n      <div>\n        <p>\n          <span>‚≠êÔ∏è</span>\n          <span>{movie.imdbRating}</span>\n        </p>\n        <p>\n          <span>üåü</span>\n          <span>{movie.userRating}</span>\n        </p>\n        <p>\n          <span>‚è≥</span>\n          <span>{movie.runtime} min</span>\n        </p>\n      </div>\n    </li>\n  );\n}\n*/\n_s(TextExpander, \"aaaBU4/ZEx+1AIG4n8cHjFopB6c=\");\n_c2 = TextExpander;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"TextExpander\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","children","TextExpander","fileName","_jsxFileName","lineNumber","columnNumber","collapsedNumWords","expandButtonText","collapseButtonText","buttonColor","expanded","className","_c","_s","isTextExpended","setIsTextExpended","displayText","split","slice","join","ButtonStyle","background","border","font","cursor","marginLeft","color","onClick","expended","style","_c2","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/use_popcorn/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./index.css\";\n\nexport default function App() {\n  return (\n    <div>\n      <TextExpander>\n        Space travel is the ultimate adventure! Imagine soaring past the stars\n        and exploring new worlds. It's the stuff of dreams and science fiction,\n        but believe it or not, space travel is a real thing. Humans and robots\n        are constantly venturing out into the cosmos to uncover its secrets and\n        push the boundaries of what's possible.\n      </TextExpander>\n\n      <TextExpander\n        collapsedNumWords={20}\n        expandButtonText=\"Show text\"\n        collapseButtonText=\"Collapse text\"\n        buttonColor=\"#ff6622\"\n      >\n        Space travel requires some seriously amazing technology and\n        collaboration between countries, private companies, and international\n        space organizations. And while it's not always easy (or cheap), the\n        results are out of this world. Think about the first time humans stepped\n        foot on the moon or when rovers were sent to roam around on Mars.\n      </TextExpander>\n\n      <TextExpander expanded={true} className=\"box\">\n        Space missions have given us incredible insights into our universe and\n        have inspired future generations to keep reaching for the stars. Space\n        travel is a pretty cool thing to think about. Who knows what we'll\n        discover next!\n      </TextExpander>\n    </div>\n  );\n}\n\nfunction TextExpander({\n  collapsedNumWords = 12,\n  expandButtonText = \"Show more\",\n  collapseButtonText = \"Show less\",\n  buttonColor = \"#1f09cc\",\n  expanded = false,\n  className,\n  children,\n}) {\n  //krijimi i variablit state\n  const [isTextExpended, setIsTextExpended] = useState(expanded);\n  //nese isTextExpended eshte true komponentet do shfaqen sic jane , ne te kundert do te ndahen dhe do te shfaqen aq fjale sa tregon collapsedNumWords\n  const displayText = isTextExpended\n    ? children\n    : children.split(\" \").slice(0, collapsedNumWords).join(\" \") + \"...\";\n  //krijimi i nje objekti per stilizimin e butonit\n  const ButtonStyle = {\n    background: \"none\",\n    border: \"none\",\n    font: \"inherit\",\n    cursor: \"pointer\",\n    marginLeft: \"7px\",\n    color: buttonColor,\n  };\n  return (\n    <div className={className}>\n      <span>{displayText}</span>\n      <button\n        onClick={() => setIsTextExpended((expended) => !expended)}\n        style={ButtonStyle}\n      >\n        {isTextExpended ? collapseButtonText : expandButtonText}\n      </button>\n    </div>\n  );\n}\n\n/*\nimport { useState } from \"react\";\n\nconst tempMovieData = [\n  {\n    imdbID: \"tt1375666\",\n    Title: \"Inception\",\n    Year: \"2010\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_SX300.jpg\",\n  },\n  {\n    imdbID: \"tt0133093\",\n    Title: \"The Matrix\",\n    Year: \"1999\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BNzQzOTk3OTAtNDQ0Zi00ZTVkLWI0MTEtMDllZjNkYzNjNTc4L2ltYWdlXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg\",\n  },\n  {\n    imdbID: \"tt6751668\",\n    Title: \"Parasite\",\n    Year: \"2019\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BYWZjMjk3ZTItODQ2ZC00NTY5LWE0ZDYtZTI3MjcwN2Q5NTVkXkEyXkFqcGdeQXVyODk4OTc3MTY@._V1_SX300.jpg\",\n  },\n];\n\nconst tempWatchedData = [\n  {\n    imdbID: \"tt1375666\",\n    Title: \"Inception\",\n    Year: \"2010\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_SX300.jpg\",\n    runtime: 148,\n    imdbRating: 8.8,\n    userRating: 10,\n  },\n  {\n    imdbID: \"tt0088763\",\n    Title: \"Back to the Future\",\n    Year: \"1985\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BZmU0M2Y1OGUtZjIxNi00ZjBkLTg1MjgtOWIyNThiZWIwYjRiXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg\",\n    runtime: 116,\n    imdbRating: 8.5,\n    userRating: 9,\n  },\n];\n\nconst average = (arr) =>\n  arr.reduce((acc, cur, i, arr) => acc + cur / arr.length, 0);\n\n// accumulator (or acc): This keeps track of the running total or aggregation.\n// currentValue (or cur): This represents the current element being processed in the array.\n// currentIndex (or i): This represents the index of the current element being processed.\n// array: This is the array reduce was called upon.\n\nexport default function App() {\n  const [movies, setMovies] = useState(tempMovieData);\n  const [watched, setWatched] = useState(tempWatchedData);\n\n  return (\n    <>\n      <NavBar>\n        <Logo />\n        <Search />\n        <Numresult movies={movies} />\n      </NavBar>\n      <Main>\n        <Box>\n          <MovieList movies={movies} />\n        </Box>\n        <Box>\n          <WatchedSummary watched={watched} />\n          <WatchedMovieList watched={watched} />\n        </Box>\n      </Main>\n    </>\n  );\n}\nfunction NavBar({ children }) {\n  //props children\n  return <nav className=\"nav-bar\">{children}</nav>;\n}\nfunction Logo() {\n  return (\n    <div className=\"logo\">\n      <span role=\"img\">üçø</span>\n      <h1>usePopcorn</h1>\n    </div>\n  );\n}\nfunction Search() {\n  const [query, setQuery] = useState(\"\");\n  return (\n    <input\n      className=\"search\"\n      type=\"text\"\n      placeholder=\"Search movies...\"\n      value={query}\n      onChange={(e) => setQuery(e.target.value)}\n    />\n  );\n}\nfunction Numresult({ movies }) {\n  return (\n    <p className=\"num-results\">\n      Found <strong>{movies.length}</strong> results\n    </p>\n  );\n}\nfunction Main({ children }) {\n  return <main className=\"main\">{children}</main>;\n}\nfunction Box({ children }) {\n  const [isOpen, setIsOpen] = useState(true);\n  return (\n    <div className=\"box\">\n      <button className=\"btn-toggle\" onClick={() => setIsOpen((open) => !open)}>\n        {isOpen ? \"‚Äì\" : \"+\"}\n      </button>\n      {isOpen && children}\n    </div>\n  );\n}\n\nfunction MovieList({ movies }) {\n  return (\n    <ul className=\"list\">\n      {movies?.map((movie) => (\n        <Movie movie={movie} key={movie.imdbID} />\n      ))}\n    </ul>\n  );\n}\nfunction Movie({ movie }) {\n  return (\n    <li>\n      <img src={movie.Poster} alt={`${movie.Title} poster`} />\n      <h3>{movie.Title}</h3>\n      <div>\n        <p>\n          <span>üóì</span>\n          <span>{movie.Year}</span>\n        </p>\n      </div>\n    </li>\n  );\n}\n\nfunction WatchedSummary({ watched }) {\n  const avgImdbRating = average(watched.map((movie) => movie.imdbRating));\n  const avgUserRating = average(watched.map((movie) => movie.userRating));\n  const avgRuntime = average(watched.map((movie) => movie.runtime));\n  return (\n    <div className=\"summary\">\n      <h2>Movies you watched</h2>\n      <div>\n        <p>\n          <span>#Ô∏è‚É£</span>\n          <span>{watched.length} movies</span>\n        </p>\n        <p>\n          <span>‚≠êÔ∏è</span>\n          <span>{avgImdbRating}</span>\n        </p>\n        <p>\n          <span>üåü</span>\n          <span>{avgUserRating}</span>\n        </p>\n        <p>\n          <span>‚è≥</span>\n          <span>{avgRuntime} min</span>\n        </p>\n      </div>\n    </div>\n  );\n}\nfunction WatchedMovieList({ watched }) {\n  return (\n    <ul className=\"list\">\n      {watched.map((movie) => (\n        <WatchedMovie movie={movie} />\n      ))}\n    </ul>\n  );\n}\nfunction WatchedMovie({ movie }) {\n  return (\n    <li key={movie.imdbID}>\n      <img src={movie.Poster} alt={`${movie.Title} poster`} />\n      <h3>{movie.Title}</h3>\n      <div>\n        <p>\n          <span>‚≠êÔ∏è</span>\n          <span>{movie.imdbRating}</span>\n        </p>\n        <p>\n          <span>üåü</span>\n          <span>{movie.userRating}</span>\n        </p>\n        <p>\n          <span>‚è≥</span>\n          <span>{movie.runtime} min</span>\n        </p>\n      </div>\n    </li>\n  );\n}\n*/\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,oBACED,OAAA;IAAAE,QAAA,gBACEF,OAAA,CAACG,YAAY;MAAAD,QAAA,EAAC;IAMd;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eAEfP,OAAA,CAACG,YAAY;MACXK,iBAAiB,EAAE,EAAG;MACtBC,gBAAgB,EAAC,WAAW;MAC5BC,kBAAkB,EAAC,eAAe;MAClCC,WAAW,EAAC,SAAS;MAAAT,QAAA,EACtB;IAMD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eAEfP,OAAA,CAACG,YAAY;MAACS,QAAQ,EAAE,IAAK;MAACC,SAAS,EAAC,KAAK;MAAAX,QAAA,EAAC;IAK9C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAACO,EAAA,GAhCuBb,GAAG;AAkC3B,SAASE,YAAYA,CAAC;EACpBK,iBAAiB,GAAG,EAAE;EACtBC,gBAAgB,GAAG,WAAW;EAC9BC,kBAAkB,GAAG,WAAW;EAChCC,WAAW,GAAG,SAAS;EACvBC,QAAQ,GAAG,KAAK;EAChBC,SAAS;EACTX;AACF,CAAC,EAAE;EAAAa,EAAA;EACD;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAACc,QAAQ,CAAC;EAC9D;EACA,MAAMM,WAAW,GAAGF,cAAc,GAC9Bd,QAAQ,GACRA,QAAQ,CAACiB,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAEZ,iBAAiB,CAAC,CAACa,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK;EACrE;EACA,MAAMC,WAAW,GAAG;IAClBC,UAAU,EAAE,MAAM;IAClBC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,UAAU,EAAE,KAAK;IACjBC,KAAK,EAAEjB;EACT,CAAC;EACD,oBACEX,OAAA;IAAKa,SAAS,EAAEA,SAAU;IAAAX,QAAA,gBACxBF,OAAA;MAAAE,QAAA,EAAOgB;IAAW;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1BP,OAAA;MACE6B,OAAO,EAAEA,CAAA,KAAMZ,iBAAiB,CAAEa,QAAQ,IAAK,CAACA,QAAQ,CAAE;MAC1DC,KAAK,EAAET,WAAY;MAAApB,QAAA,EAElBc,cAAc,GAAGN,kBAAkB,GAAGD;IAAgB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlNAQ,EAAA,CArCSZ,YAAY;AAAA6B,GAAA,GAAZ7B,YAAY;AAAA,IAAAW,EAAA,EAAAkB,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}